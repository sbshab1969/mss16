Supported Back-ends
JBoss Logging understands the following back-ends as first-class citizens:

    JBoss LogManager (mainly used only inside the WildFly app server)
    Log4j 2
    Log4j 1
    Slf4j
    JDK logging

Note the order above, it is important. By default JBoss Logging will search the ClassLoader for the availability of classes that indicate one of the above "providers" being available. It does this in the order defined above. So, for example, if you have both JBoss LogManager and Slf4j available your classpath then JBoss LogManager will be used as it has the "higher precedence".
This can sometimes lead to an unwanted logging set up to be used. In such cases, JBoss Logging provides for you to tell it specifically which provider to use and circumvent the discovery process just described. It allows 2 different mechanisms for this:

First, JBoss Logging will look for a System setting with the key org.jboss.logging.provider, which can be set to one of the following values:

        jboss
        jdk
        log4j2
        log4j
        slf4j

Next, JBoss Logging will look for a JDK service (see javadocs for java.util.ServiceLoader for details) for its "provider" contract (org.jboss.logging.Provider). If multiple are available, it will use the first one returned by the ClassLoader.
